# Manager Portal Refactor: Gmail-Style Layout

## 📋 Overview

Refactor hiện tại từ bảng booking phức tạp → **Gmail-style 3-panel layout**:
- **Left Panel (20%):** Filters & Navigation
- **Center Panel (35%):** Compact List (Inbox Style)
- **Right Panel (45%):** Detail View & Actions

---

## 🎯 Phase 1: CSS Architecture

### Step 1.1: Create New CSS File

**File:** `assets/css/manager-layout-new.css`

```css
/* ===================================
   GMAIL-STYLE MANAGER LAYOUT
   =================================== */

:root {
    --rb-sidebar-width: 280px;
    --rb-list-width: 35%;
    --rb-detail-width: 45%;
    --rb-spacing: 16px;
    --rb-transition: 0.2s ease;
}

/* Main Container */
.rb-manager-dashboard-new {
    display: grid;
    grid-template-columns: var(--rb-sidebar-width) 1fr 1fr;
    gap: var(--rb-spacing);
    height: calc(100vh - 200px);
    margin: var(--rb-spacing);
}

/* ===== SIDEBAR ===== */
.rb-manager-sidebar-filters {
    background: #ffffff;
    border: 1px solid #e0e0e0;
    border-radius: 12px;
    padding: 20px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    display: flex;
    flex-direction: column;
    gap: 20px;
    overflow-y: auto;
    max-height: 100%;
}

.rb-sidebar-section {
    display: flex;
    flex-direction: column;
    gap: 12px;
}

.rb-sidebar-title {
    font-size: 12px;
    font-weight: 700;
    text-transform: uppercase;
    color: #666;
    letter-spacing: 0.5px;
    margin: 0;
}

.rb-filter-button {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 10px 14px;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    background: #f9f9f9;
    cursor: pointer;
    transition: all var(--rb-transition);
    font-size: 14px;
    color: #333;
}

.rb-filter-button:hover,
.rb-filter-button.active {
    background: #f0f7ff;
    border-color: #2196F3;
    color: #2196F3;
    font-weight: 600;
}

.rb-filter-count {
    display: inline-block;
    min-width: 24px;
    height: 24px;
    padding: 0 6px;
    background: #2196F3;
    color: white;
    border-radius: 12px;
    text-align: center;
    font-size: 12px;
    font-weight: 600;
    line-height: 24px;
}

.rb-filter-button.active .rb-filter-count {
    background: #1976D2;
}

/* Statistics Cards */
.rb-stats-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 10px;
}

.rb-stat-mini {
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    padding: 12px;
    border-radius: 8px;
    text-align: center;
}

.rb-stat-mini.pending { background: linear-gradient(135deg, #fff5e1 0%, #ffe082 100%); }
.rb-stat-mini.confirmed { background: linear-gradient(135deg, #e1f5e1 0%, #a5d6a7 100%); }
.rb-stat-mini.completed { background: linear-gradient(135deg, #e3f2fd 0%, #90caf9 100%); }
.rb-stat-mini.cancelled { background: linear-gradient(135deg, #ffebee 0%, #ef9a9a 100%); }

.rb-stat-mini-label {
    font-size: 11px;
    font-weight: 600;
    color: rgba(0,0,0,0.6);
    text-transform: uppercase;
}

.rb-stat-mini-value {
    font-size: 20px;
    font-weight: 700;
    color: #333;
}

/* ===== LIST PANEL ===== */
.rb-manager-list-panel {
    background: #ffffff;
    border: 1px solid #e0e0e0;
    border-radius: 12px;
    display: flex;
    flex-direction: column;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    overflow: hidden;
}

.rb-list-header {
    padding: 16px;
    border-bottom: 1px solid #e0e0e0;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 12px;
}

.rb-list-search {
    flex: 1;
    display: flex;
    align-items: center;
    gap: 8px;
    background: #f5f5f5;
    padding: 8px 12px;
    border-radius: 6px;
    border: 1px solid #e0e0e0;
}

.rb-list-search input {
    flex: 1;
    border: none;
    background: transparent;
    font-size: 14px;
    outline: none;
}

.rb-list-body {
    flex: 1;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
}

.rb-booking-item {
    padding: 12px 16px;
    border-bottom: 1px solid #f0f0f0;
    cursor: pointer;
    transition: all var(--rb-transition);
    display: flex;
    align-items: center;
    gap: 12px;
    position: relative;
}

.rb-booking-item:hover {
    background: #f9f9f9;
}

.rb-booking-item.active {
    background: #f0f7ff;
    border-left: 3px solid #2196F3;
    padding-left: 13px;
}

.rb-booking-item-avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 700;
    font-size: 16px;
    flex-shrink: 0;
}

.rb-booking-item-content {
    flex: 1;
    min-width: 0;
}

.rb-booking-item-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 4px;
}

.rb-booking-item-name {
    font-weight: 600;
    color: #333;
    font-size: 14px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.rb-booking-item-time {
    font-size: 12px;
    color: #999;
}

.rb-booking-item-meta {
    display: flex;
    gap: 8px;
    align-items: center;
    font-size: 12px;
}

.rb-booking-badge {
    display: inline-block;
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 11px;
    font-weight: 600;
    white-space: nowrap;
}

.rb-booking-badge.pending { background: #fff3cd; color: #856404; }
.rb-booking-badge.confirmed { background: #d4edda; color: #155724; }
.rb-booking-badge.completed { background: #d1ecf1; color: #0c5460; }
.rb-booking-badge.cancelled { background: #f8d7da; color: #721c24; }

.rb-list-empty {
    padding: 40px 20px;
    text-align: center;
    color: #999;
    font-size: 14px;
}

/* ===== DETAIL PANEL ===== */
.rb-manager-detail-panel {
    background: #ffffff;
    border: 1px solid #e0e0e0;
    border-radius: 12px;
    display: flex;
    flex-direction: column;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    overflow: hidden;
}

.rb-detail-header {
    padding: 20px;
    border-bottom: 1px solid #e0e0e0;
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
}

.rb-detail-header-row {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 16px;
    margin-bottom: 12px;
}

.rb-detail-title {
    font-size: 18px;
    font-weight: 700;
    color: #333;
    margin: 0;
}

.rb-detail-subtitle {
    font-size: 13px;
    color: #666;
    margin: 0;
}

.rb-detail-status-badge {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 6px 12px;
    border-radius: 6px;
    font-size: 12px;
    font-weight: 600;
    background: white;
    border: 1px solid #ddd;
}

.rb-detail-body {
    flex: 1;
    overflow-y: auto;
    padding: 20px;
    display: flex;
    flex-direction: column;
    gap: 24px;
}

.rb-detail-empty {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    color: #999;
    font-size: 14px;
    text-align: center;
}

/* Detail Sections */
.rb-detail-section {
    display: flex;
    flex-direction: column;
    gap: 12px;
}

.rb-detail-section-title {
    font-size: 13px;
    font-weight: 700;
    text-transform: uppercase;
    color: #666;
    letter-spacing: 0.5px;
    margin: 0;
}

.rb-detail-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 16px;
}

.rb-detail-row {
    display: flex;
    flex-direction: column;
    gap: 4px;
}

.rb-detail-label {
    font-size: 12px;
    font-weight: 600;
    color: #999;
    text-transform: uppercase;
}

.rb-detail-value {
    font-size: 14px;
    color: #333;
    font-weight: 500;
}

.rb-detail-value.large {
    font-size: 16px;
    font-weight: 700;
}

/* Detail Actions */
.rb-detail-actions {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.rb-detail-action-button {
    padding: 10px 16px;
    border: 1px solid #ddd;
    border-radius: 6px;
    background: white;
    cursor: pointer;
    font-size: 13px;
    font-weight: 600;
    transition: all var(--rb-transition);
    text-align: center;
}

.rb-detail-action-button:hover {
    background: #f5f5f5;
    border-color: #999;
}

.rb-detail-action-button.primary {
    background: #2196F3;
    color: white;
    border-color: #2196F3;
}

.rb-detail-action-button.primary:hover {
    background: #1976D2;
    border-color: #1976D2;
}

.rb-detail-action-button.danger {
    background: #f44336;
    color: white;
    border-color: #f44336;
}

.rb-detail-action-button.danger:hover {
    background: #da190b;
    border-color: #da190b;
}

/* ===== RESPONSIVE ===== */
@media (max-width: 1400px) {
    :root {
        --rb-sidebar-width: 240px;
    }
    
    .rb-manager-dashboard-new {
        grid-template-columns: var(--rb-sidebar-width) 1fr 1fr;
    }
}

@media (max-width: 1024px) {
    .rb-manager-dashboard-new {
        grid-template-columns: 1fr 1fr;
        gap: 12px;
        margin: 12px;
    }
    
    .rb-manager-sidebar-filters {
        display: none;
    }
    
    .rb-manager-list-panel {
        grid-column: 1;
    }
    
    .rb-manager-detail-panel {
        grid-column: 2;
    }
}

@media (max-width: 768px) {
    .rb-manager-dashboard-new {
        grid-template-columns: 1fr;
        gap: 12px;
        height: auto;
    }
    
    .rb-manager-list-panel {
        max-height: 50vh;
    }
    
    .rb-manager-detail-panel {
        max-height: 50vh;
    }
}

@media (max-width: 480px) {
    .rb-detail-grid {
        grid-template-columns: 1fr;
    }
    
    .rb-booking-item-meta {
        flex-wrap: wrap;
    }
}
```

---

## 🔧 Phase 2: HTML Markup

### Step 2.1: Update Manager Dashboard Section

**Modify:** `public/class-frontend-manager.php` - `render_section_dashboard()` method

Replace the entire dashboard section with this structure:

```php
private function render_section_dashboard($bookings, $ajax_nonce, $filters, $stats, $source_stats, $location_id) {
    // ... existing code ...
    
    ob_start();
    ?>
    <div class="rb-manager-dashboard-new">
        <!-- ===== LEFT SIDEBAR: FILTERS ===== -->
        <aside class="rb-manager-sidebar-filters">
            <!-- Search -->
            <form class="rb-manager-filter-search" method="get">
                <input type="hidden" name="location_id" value="<?php echo esc_attr($location_id); ?>">
                <input type="hidden" name="rb_section" value="dashboard">
                <div class="rb-list-search">
                    <span>🔍</span>
                    <input 
                        type="text" 
                        name="search" 
                        value="<?php echo esc_attr($filters['search_term']); ?>"
                        placeholder="Search bookings..."
                    >
                </div>
            </form>

            <!-- Status Filter -->
            <div class="rb-sidebar-section">
                <h3 class="rb-sidebar-title">Status</h3>
                <?php
                $status_options = array(
                    '' => array('label' => 'All', 'icon' => '📬', 'count' => $stats['total'] ?? 0),
                    'pending' => array('label' => 'Pending', 'icon' => '⏳', 'count' => $stats['pending'] ?? 0),
                    'confirmed' => array('label' => 'Confirmed', 'icon' => '✓', 'count' => $stats['confirmed'] ?? 0),
                    'completed' => array('label' => 'Completed', 'icon' => '✓✓', 'count' => $stats['completed'] ?? 0),
                    'cancelled' => array('label' => 'Cancelled', 'icon' => '✕', 'count' => $stats['cancelled'] ?? 0),
                );
                
                foreach ($status_options as $status => $info) :
                    $url = add_query_arg(array('filter_status' => $status, 'location_id' => $location_id), remove_query_arg(array('filter_status')));
                    $is_active = $filters['filter_status'] === $status;
                ?>
                    <a href="<?php echo esc_url($url); ?>" class="rb-filter-button <?php echo $is_active ? 'active' : ''; ?>">
                        <span><?php echo esc_html($info['icon'] . ' ' . $info['label']); ?></span>
                        <span class="rb-filter-count"><?php echo esc_html($info['count']); ?></span>
                    </a>
                <?php endforeach; ?>
            </div>

            <!-- Source Filter -->
            <div class="rb-sidebar-section">
                <h3 class="rb-sidebar-title">Source</h3>
                <?php
                $source_options = array(
                    'website' => array('label' => 'Website', 'icon' => '🌐'),
                    'phone' => array('label' => 'Phone', 'icon' => '📞'),
                    'facebook' => array('label' => 'Facebook', 'icon' => '📘'),
                    'walk-in' => array('label' => 'Walk-in', 'icon' => '🚶'),
                );
                
                foreach ($source_options as $source => $info) :
                    $url = add_query_arg(array('filter_source' => $source, 'location_id' => $location_id), remove_query_arg(array('filter_source')));
                ?>
                    <a href="<?php echo esc_url($url); ?>" class="rb-filter-button">
                        <?php echo esc_html($info['icon'] . ' ' . $info['label']); ?>
                    </a>
                <?php endforeach; ?>
            </div>

            <!-- Statistics -->
            <div class="rb-sidebar-section">
                <h3 class="rb-sidebar-title">Today</h3>
                <div class="rb-stats-grid">
                    <div class="rb-stat-mini pending">
                        <div class="rb-stat-mini-label">Pending</div>
                        <div class="rb-stat-mini-value"><?php echo esc_html($stats['pending'] ?? 0); ?></div>
                    </div>
                    <div class="rb-stat-mini confirmed">
                        <div class="rb-stat-mini-label">Confirmed</div>
                        <div class="rb-stat-mini-value"><?php echo esc_html($stats['confirmed'] ?? 0); ?></div>
                    </div>
                    <div class="rb-stat-mini completed">
                        <div class="rb-stat-mini-label">Completed</div>
                        <div class="rb-stat-mini-value"><?php echo esc_html($stats['completed'] ?? 0); ?></div>
                    </div>
                    <div class="rb-stat-mini cancelled">
                        <div class="rb-stat-mini-label">Cancelled</div>
                        <div class="rb-stat-mini-value"><?php echo esc_html($stats['cancelled'] ?? 0); ?></div>
                    </div>
                </div>
            </div>
        </aside>

        <!-- ===== CENTER: BOOKING LIST ===== -->
        <div class="rb-manager-list-panel">
            <div class="rb-list-header">
                <h3 style="margin: 0; font-size: 16px; color: #333;">
                    Bookings (<?php echo count($bookings); ?>)
                </h3>
                <div style="display: flex; gap: 8px;">
                    <button class="rb-filter-button" style="padding: 6px 12px; border-radius: 4px;">⚙️</button>
                </div>
            </div>
            
            <div class="rb-list-body">
                <?php if (!empty($bookings)) : ?>
                    <?php foreach ($bookings as $booking) :
                        $initials = substr($booking->customer_name, 0, 1);
                        $status_label = $this->format_booking_status($booking->status);
                        $date_display = date_i18n('M d, Y', strtotime($booking->booking_date));
                        $time_display = $booking->booking_time;
                    ?>
                        <div 
                            class="rb-booking-item" 
                            data-booking-id="<?php echo esc_attr($booking->id); ?>"
                            onclick="selectBooking(this, event)"
                        >
                            <div class="rb-booking-item-avatar">
                                <?php echo esc_html($initials); ?>
                            </div>
                            
                            <div class="rb-booking-item-content">
                                <div class="rb-booking-item-row">
                                    <span class="rb-booking-item-name">
                                        <?php echo esc_html($booking->customer_name); ?>
                                    </span>
                                    <span class="rb-booking-item-time">
                                        <?php echo esc_html($date_display); ?>
                                    </span>
                                </div>
                                
                                <div class="rb-booking-item-meta">
                                    <span>📞 <?php echo esc_html($booking->customer_phone); ?></span>
                                    <span class="rb-booking-badge <?php echo esc_attr($booking->status); ?>">
                                        <?php echo esc_html($status_label); ?>
                                    </span>
                                    <span><?php echo esc_html($booking->guest_count); ?> 👥</span>
                                </div>
                            </div>
                        </div>
                    <?php endforeach; ?>
                <?php else : ?>
                    <div class="rb-list-empty">
                        📭 No bookings found
                    </div>
                <?php endif; ?>
            </div>
        </div>

        <!-- ===== RIGHT: DETAIL PANEL ===== -->
        <div class="rb-manager-detail-panel">
            <div id="rb-detail-content" data-nonce="<?php echo esc_attr($ajax_nonce); ?>">
                <div class="rb-detail-empty">
                    👈 Select a booking to view details
                </div>
            </div>
        </div>
    </div>

    <script>
    function selectBooking(element, event) {
        event.preventDefault();
        
        // Remove previous selection
        document.querySelectorAll('.rb-booking-item').forEach(el => {
            el.classList.remove('active');
        });
        
        // Add active class
        element.classList.add('active');
        
        // Load detail
        const bookingId = element.dataset.bookingId;
        loadBookingDetail(bookingId);
    }

    function loadBookingDetail(bookingId) {
        const detailPanel = document.getElementById('rb-detail-content');
        const nonce = detailPanel.dataset.nonce;
        
        // Find booking data from list item
        const bookingItem = document.querySelector(`[data-booking-id="${bookingId}"]`);
        if (!bookingItem) return;
        
        // Build detail HTML from data attributes
        const booking = {
            id: bookingId,
            name: bookingItem.querySelector('.rb-booking-item-name').textContent,
            phone: bookingItem.querySelector('.rb-booking-item-meta span').textContent.replace('📞 ', ''),
            status: bookingItem.querySelector('.rb-booking-badge').textContent,
        };
        
        // Render detail
        renderBookingDetail(booking, nonce);
    }

    function renderBookingDetail(booking, nonce) {
        const detailPanel = document.getElementById('rb-detail-content');
        
        detailPanel.innerHTML = `
            <div class="rb-detail-header">
                <div class="rb-detail-header-row">
                    <div>
                        <h3 class="rb-detail-title">${booking.name}</h3>
                        <p class="rb-detail-subtitle">#${String(booking.id).padStart(5, '0')}</p>
                    </div>
                    <span class="rb-detail-status-badge">${booking.status}</span>
                </div>
            </div>
            
            <div class="rb-detail-body">
                <div class="rb-detail-section">
                    <h4 class="rb-detail-section-title">Contact Info</h4>
                    <div class="rb-detail-row">
                        <span class="rb-detail-label">Phone</span>
                        <span class="rb-detail-value">${booking.phone}</span>
                    </div>
                </div>
                
                <div class="rb-detail-section">
                    <h4 class="rb-detail-section-title">Actions</h4>
                    <div class="rb-detail-actions">
                        <button class="rb-detail-action-button primary">✓ Confirm</button>
                        <button class="rb-detail-action-button">📝 Edit</button>
                        <button class="rb-detail-action-button danger">✕ Cancel</button>
                    </div>
                </div>
            </div>
        `;
    }
    </script>
    <?php
    
    return ob_get_clean();
}
```

---

## 📦 Phase 3: Implementation Steps

### Step 3.1: Enqueue New CSS

**File:** `public/class-frontend.php` hoặc nơi enqueue assets

```php
function rb_enqueue_manager_assets() {
    if (is_admin()) return;
    
    wp_enqueue_style(
        'rb-manager-layout-new',
        RB_PLUGIN_URL . 'assets/css/manager-layout-new.css',
        array(),
        '1.0.0'
    );
    
    wp_enqueue_script(
        'rb-manager-layout-js',
        RB_PLUGIN_URL . 'assets/js/manager-layout.js',
        array('jquery'),
        '1.0.0',
        true
    );
}
add_action('wp_enqueue_scripts', 'rb_enqueue_manager_assets');
```

### Step 3.2: Create JS File

**File:** `assets/js/manager-layout.js`

```javascript
jQuery(document).ready(function($) {
    const bookingList = document.querySelectorAll('.rb-booking-item');
    
    // Auto-select first booking
    if (bookingList.length > 0) {
        bookingList[0].click();
    }
    
    // Filter search
    const searchInput = document.querySelector('.rb-list-search input');
    if (searchInput) {
        searchInput.addEventListener('input', debounce(filterBookings, 300));
    }
});

function debounce(func, wait) {
    let timeout;
    return function(...args) {
        clearTimeout(timeout);
        timeout = setTimeout(() => func.apply(this, args), wait);
    };
}

function filterBookings(e) {
    const searchTerm = e.target.value.toLowerCase();
    const items = document.querySelectorAll('.rb-booking-item');
    
    items.forEach(item => {
        const name = item.querySelector('.rb-booking-item-name').textContent.toLowerCase();
        const phone = item.querySelector('.rb-booking-item-meta span').textContent.toLowerCase();
        
        if (name.includes(searchTerm) || phone.includes(searchTerm)) {
            item.style.display = '';
        } else {
            item.style.display = 'none';
        }
    });
}
```

---

## ✅ Phase 4: Testing Checklist

- [ ] CSS loads correctly (no style conflicts)
- [ ] Left sidebar filters work
- [ ] Clicking booking item shows detail
- [ ] Search filters bookings in real-time
- [ ] Status badges display correctly
- [ ] Responsive on tablet (1024px)
- [ ] Responsive on mobile (768px)
- [ ] Action buttons functional
- [ ] No console errors
- [ ] Performance: detail loads < 200ms

---

## 🎨 Phase 5: Future Enhancements

1. **Drag-drop to change status** → Update AJAX handler
2. **Keyboard shortcuts** → Press `J`/`K` to navigate
3. **Bulk actions** → Select multiple bookings
4. **Export/Print** → Generate PDF report
5. **Advanced filters** → Date range, guest count range
6. **Real-time sync** → WebSocket for updates
7. **Quick reply** → SMS/Email templates

---

## 📝 Notes

- Giữ lại tất cả existing AJAX handlers
- CSS sử dụng CSS Grid cho responsive
- JavaScript vanilla (không jQuery phức tạp)
- Maintain backward compatibility
- Có thể dùng hiện tại rồi optimize sau

---

## 🚀 Phase 6: Advanced Detail Panel

### Step 6.1: Full Detail Panel Template

Replace `renderBookingDetail()` JavaScript function với:

```javascript
function renderBookingDetail(bookingId, nonce) {
    // Fetch full booking data via AJAX
    fetch(ajaxurl, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: new URLSearchParams({
            action: 'rb_get_booking_detail',
            booking_id: bookingId,
            nonce: nonce
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            renderDetailHTML(data.data);
        }
    });
}

function renderDetailHTML(booking) {
    const panel = document.getElementById('rb-detail-content');
    
    const statusColors = {
        pending: '#FFC107',
        confirmed: '#4CAF50',
        completed: '#2196F3',
        cancelled: '#F44336'
    };
    
    const statusText = {
        pending: '⏳ Pending',
        confirmed: '✓ Confirmed',
        completed: '✓✓ Completed',
        cancelled: '✕ Cancelled'
    };
    
    panel.innerHTML = `
        <div class="rb-detail-header" style="background: linear-gradient(135deg, ${statusColors[booking.status]} 0%, ${statusColors[booking.status]}dd 100%);">
            <div class="rb-detail-header-row">
                <div>
                    <h3 class="rb-detail-title" style="color: white;">${booking.customer_name}</h3>
                    <p class="rb-detail-subtitle" style="color: rgba(255,255,255,0.9);">#${booking.padded_id} • ${booking.date_display}</p>
                </div>
                <span class="rb-detail-status-badge" style="background: white; color: ${statusColors[booking.status]}; border-color: ${statusColors[booking.status]};">
                    ${statusText[booking.status]}
                </span>
            </div>
        </div>
        
        <div class="rb-detail-body">
            <!-- CONTACT SECTION -->
            <div class="rb-detail-section">
                <h4 class="rb-detail-section-title">📞 Contact Information</h4>
                <div class="rb-detail-grid">
                    <div class="rb-detail-row">
                        <span class="rb-detail-label">Phone</span>
                        <span class="rb-detail-value">
                            <a href="tel:${booking.customer_phone}" style="color: #2196F3; text-decoration: none;">
                                ${booking.customer_phone}
                            </a>
                        </span>
                    </div>
                    <div class="rb-detail-row">
                        <span class="rb-detail-label">Email</span>
                        <span class="rb-detail-value">
                            <a href="mailto:${booking.customer_email}" style="color: #2196F3; text-decoration: none;">
                                ${booking.customer_email}
                            </a>
                        </span>
                    </div>
                </div>
            </div>

            <!-- BOOKING SECTION -->
            <div class="rb-detail-section">
                <h4 class="rb-detail-section-title">🍽️ Booking Details</h4>
                <div class="rb-detail-grid">
                    <div class="rb-detail-row">
                        <span class="rb-detail-label">Date</span>
                        <span class="rb-detail-value large">${booking.date_display}</span>
                    </div>
                    <div class="rb-detail-row">
                        <span class="rb-detail-label">Time</span>
                        <span class="rb-detail-value large">${booking.booking_time}</span>
                    </div>
                    <div class="rb-detail-row">
                        <span class="rb-detail-label">Guests</span>
                        <span class="rb-detail-value large">👥 ${booking.guest_count}</span>
                    </div>
                    <div class="rb-detail-row">
                        <span class="rb-detail-label">Source</span>
                        <span class="rb-detail-value">${booking.source_label}</span>
                    </div>
                    <div class="rb-detail-row">
                        <span class="rb-detail-label">Table</span>
                        <span class="rb-detail-value">${booking.table_number || '—'}</span>
                    </div>
                    <div class="rb-detail-row">
                        <span class="rb-detail-label">Created</span>
                        <span class="rb-detail-value">${booking.created_display}</span>
                    </div>
                </div>
            </div>

            <!-- NOTES SECTION -->
            ${booking.special_requests ? `
                <div class="rb-detail-section">
                    <h4 class="rb-detail-section-title">✍️ Special Requests</h4>
                    <div style="padding: 12px; background: #f9f9f9; border-radius: 6px; border-left: 3px solid #FFC107; font-size: 14px; color: #333;">
                        ${booking.special_requests}
                    </div>
                </div>
            ` : ''}

            ${booking.admin_notes ? `
                <div class="rb-detail-section">
                    <h4 class="rb-detail-section-title">📝 Internal Notes</h4>
                    <div style="padding: 12px; background: #f0f7ff; border-radius: 6px; border-left: 3px solid #2196F3; font-size: 14px; color: #333;">
                        ${booking.admin_notes}
                    </div>
                </div>
            ` : ''}

            <!-- ACTIONS SECTION -->
            <div class="rb-detail-section">
                <h4 class="rb-detail-section-title">⚡ Actions</h4>
                <div class="rb-detail-actions">
                    ${booking.status === 'pending' ? `
                        <button class="rb-detail-action-button primary" onclick="confirmBooking(${booking.id}, '${nonce}')">
                            ✓ Confirm Booking
                        </button>
                    ` : ''}
                    
                    <button class="rb-detail-action-button" onclick="editBooking(${booking.id})">
                        ✎ Edit Booking
                    </button>
                    
                    ${booking.status !== 'cancelled' ? `
                        <button class="rb-detail-action-button danger" onclick="cancelBooking(${booking.id}, '${nonce}')">
                            ✕ Cancel Booking
                        </button>
                    ` : ''}
                    
                    <button class="rb-detail-action-button" onclick="deleteBooking(${booking.id}, '${nonce}')">
                        🗑️ Delete
                    </button>
                </div>
            </div>
        </div>
    `;
}

// Action Handlers
function confirmBooking(bookingId, nonce) {
    if (!confirm('Confirm this booking?')) return;
    
    updateBooking(bookingId, 'confirm', nonce);
}

function cancelBooking(bookingId, nonce) {
    if (!confirm('Cancel this booking?')) return;
    
    updateBooking(bookingId, 'cancel', nonce);
}

function deleteBooking(bookingId, nonce) {
    if (!confirm('Delete this booking permanently?')) return;
    
    updateBooking(bookingId, 'delete', nonce);
}

function updateBooking(bookingId, action, nonce) {
    const formData = new FormData();
    formData.append('action', 'rb_manager_update_booking');
    formData.append('booking_id', bookingId);
    formData.append('manager_action', action);
    formData.append('nonce', nonce);
    
    fetch(ajaxurl, {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('Booking updated successfully!');
            location.reload(); // Hoặc update UI mà không reload
        } else {
            alert('Error: ' + data.data.message);
        }
    });
}

function editBooking(bookingId) {
    // Open modal hoặc navigate to edit form
    const editModal = document.getElementById('rb-manager-edit-modal');
    if (editModal) {
        // Load data vào modal
        editModal.removeAttribute('hidden');
    }
}
```

### Step 6.2: Add AJAX Handler in PHP

**File:** `public/class-frontend-manager.php`

Add new method:

```php
private function init_ajax_handlers() {
    // ... existing handlers ...
    add_action('wp_ajax_rb_get_booking_detail', array($this, 'handle_get_booking_detail'));
    add_action('wp_ajax_nopriv_rb_get_booking_detail', array($this, 'handle_get_booking_detail'));
}

public function handle_get_booking_detail() {
    if (!check_ajax_referer('rb_frontend_nonce', 'nonce', false)) {
        wp_send_json_error(array('message' => __('Security check failed', 'restaurant-booking')));
        wp_die();
    }

    $booking_id = isset($_POST['booking_id']) ? intval($_POST['booking_id']) : 0;

    if (!$booking_id) {
        wp_send_json_error(array('message' => __('Invalid booking', 'restaurant-booking')));
        wp_die();
    }

    global $rb_booking;
    if (!$rb_booking) {
        require_once RB_PLUGIN_DIR . 'includes/class-booking.php';
        $rb_booking = new RB_Booking();
    }

    $booking = $rb_booking->get_booking($booking_id);

    if (!$booking) {
        wp_send_json_error(array('message' => __('Booking not found', 'restaurant-booking')));
        wp_die();
    }

    $formatted = $this->format_booking_for_response($booking);

    wp_send_json_success($formatted);
    wp_die();
}
```

---

## 🎯 Phase 7: Filter Functionality

### Step 7.1: Real-time Filter Updates

**Update `assets/js/manager-layout.js`:**

```javascript
jQuery(document).ready(function($) {
    // Auto-select first booking
    selectFirstBooking();
    
    // Setup event listeners
    setupFilterListeners();
    setupSearchListener();
    setupStatusFilters();
});

function setupFilterListeners() {
    document.querySelectorAll('.rb-filter-button').forEach(btn => {
        btn.addEventListener('click', function(e) {
            if (this.href) return; // Let link work normally
            
            e.preventDefault();
            
            // Update active state
            document.querySelectorAll('.rb-filter-button').forEach(b => {
                b.classList.remove('active');
            });
            this.classList.add('active');
        });
    });
}

function setupSearchListener() {
    const searchInput = document.querySelector('.rb-list-search input');
    if (!searchInput) return;
    
    searchInput.addEventListener('input', debounce(function(e) {
        const term = e.target.value.toLowerCase();
        filterBookingsList(term);
    }, 300));
}

function setupStatusFilters() {
    const statusBadges = document.querySelectorAll('.rb-booking-badge');
    statusBadges.forEach(badge => {
        badge.addEventListener('click', function(e) {
            e.stopPropagation();
            // Filter by status
            const status = this.className.split(' ').pop();
            console.log('Filter by status:', status);
        });
    });
}

function filterBookingsList(searchTerm) {
    const items = document.querySelectorAll('.rb-booking-item');
    let visibleCount = 0;
    
    items.forEach(item => {
        const name = item.querySelector('.rb-booking-item-name')?.textContent.toLowerCase() || '';
        const phone = item.querySelector('.rb-booking-item-meta span')?.textContent.toLowerCase() || '';
        
        const matches = name.includes(searchTerm) || phone.includes(searchTerm);
        
        if (matches) {
            item.style.display = '';
            visibleCount++;
        } else {
            item.style.display = 'none';
        }
    });
    
    // Update empty state
    const listBody = document.querySelector('.rb-list-body');
    const emptyState = listBody.querySelector('.rb-list-empty');
    
    if (visibleCount === 0) {
        if (!emptyState) {
            const empty = document.createElement('div');
            empty.className = 'rb-list-empty';
            empty.textContent = '🔍 No results found';
            listBody.appendChild(empty);
        }
    } else {
        if (emptyState) {
            emptyState.remove();
        }
    }
}

function selectFirstBooking() {
    const firstItem = document.querySelector('.rb-booking-item');
    if (firstItem) {
        firstItem.click();
    }
}

function selectBooking(element, event) {
    event.preventDefault();
    
    // Remove previous selection
    document.querySelectorAll('.rb-booking-item').forEach(el => {
        el.classList.remove('active');
    });
    
    // Add active class
    element.classList.add('active');
    
    // Load detail
    const bookingId = element.dataset.bookingId;
    const nonce = document.getElementById('rb-detail-content')?.dataset.nonce;
    
    if (nonce) {
        renderBookingDetail(bookingId, nonce);
    }
}

function debounce(func, wait) {
    let timeout;
    return function(...args) {
        clearTimeout(timeout);
        timeout = setTimeout(() => func.apply(this, args), wait);
    };
}
```

---

## 📱 Phase 8: Mobile Optimization

### Step 8.1: Mobile-specific CSS

Add to `assets/css/manager-layout-new.css`:

```css
/* Mobile View - Stacked Layout */
@media (max-width: 1024px) {
    .rb-manager-dashboard-new {
        grid-template-columns: 1fr;
        height: auto;
    }
    
    .rb-manager-sidebar-filters {
        position: sticky;
        top: 0;
        z-index: 100;
        border-bottom: 2px solid #e0e0e0;
        max-height: 120px;
        display: grid;
        grid-template-columns: repeat(auto-flow, minmax(120px, 1fr));
        gap: 8px;
        padding: 12px;
    }
    
    .rb-sidebar-section {
        display: none;
    }
    
    .rb-sidebar-section:first-of-type {
        display: flex;
        flex-direction: row;
        gap: 6px;
    }
    
    .rb-manager-list-panel,
    .rb-manager-detail-panel {
        max-height: 50vh;
    }
}

@media (max-width: 640px) {
    .rb-manager-sidebar-filters {
        display: none;
    }
    
    .rb-manager-dashboard-new {
        grid-template-columns: 1fr;
        gap: 8px;
        margin: 8px;
    }
    
    .rb-list-header {
        padding: 12px;
    }
    
    .rb-booking-item {
        padding: 8px 12px;
    }
    
    .rb-detail-grid {
        grid-template-columns: 1fr;
    }
    
    .rb-detail-actions {
        gap: 6px;
    }
    
    .rb-detail-action-button {
        padding: 8px 12px;
        font-size: 12px;
    }
}
```

---

## ✅ Phase 9: Full Integration Checklist

### Development Checklist
- [ ] Tạo file `assets/css/manager-layout-new.css`
- [ ] Tạo file `assets/js/manager-layout.js`
- [ ] Update `render_section_dashboard()` trong PHP
- [ ] Add `handle_get_booking_detail()` AJAX handler
- [ ] Test filter buttons work
- [ ] Test search filters bookings
- [ ] Test click booking shows detail
- [ ] Test responsive breakpoints
- [ ] Test all action buttons (Confirm, Cancel, Delete)
- [ ] Check console for JS errors

### Quality Assurance
- [ ] No CSS conflicts với existing styles
- [ ] Z-index issues resolved
- [ ] Hover states work smoothly
- [ ] Mobile gesture friendly
- [ ] Keyboard navigation (Tab, Enter)
- [ ] Performance: FCP < 1s, LCP < 2.5s
- [ ] No layout shift (CLS < 0.1)
- [ ] Accessibility: Color contrast OK, ARIA labels

### Browser Testing
- [ ] Chrome (latest)
- [ ] Firefox (latest)
- [ ] Safari (latest)
- [ ] Edge (latest)
- [ ] Mobile Safari (iOS)
- [ ] Chrome Mobile (Android)

---

## 🔄 Phase 10: Rollback Plan

If something goes wrong:

```bash
# Revert CSS
rm assets/css/manager-layout-new.css

# Revert JS
rm assets/js/manager-layout.js

# Revert PHP - restore from backup
git checkout public/class-frontend-manager.php

# Clear WordPress cache
wp cache flush
wp transient delete-all
```

---

## 🎬 Phase 11: Performance Optimization

### Lazy Loading Detail Panel

```javascript
const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            loadBookingDetail(entry.target.dataset.bookingId);
            observer.unobserve(entry.target);
        }
    });
});

document.querySelectorAll('.rb-booking-item').forEach(item => {
    observer.observe(item);
});
```

### Debounced Search

```javascript
const searchInput = document.querySelector('.rb-list-search input');
searchInput.addEventListener('input', debounce(filterBookings, 500));
```

### CSS Loading Optimization

```php
// Enqueue critical CSS inline
wp_add_inline_style('wp-admin', file_get_contents(RB_PLUGIN_DIR . 'assets/css/manager-layout-critical.css'));

// Defer non-critical CSS
wp_enqueue_style(
    'rb-manager-layout',
    RB_PLUGIN_URL . 'assets/css/manager-layout-new.css',
    array(),
    '1.0.0',
    'all'
);
```

---

## 📊 Success Metrics

Sau khi implement, measure:

| Metric | Target | Tool |
|--------|--------|------|
| Page Load Time | < 2s | Google Lighthouse |
| Time to Interactive | < 3s | Lighthouse |
| First Contentful Paint | < 1s | Lighthouse |
| Cumulative Layout Shift | < 0.1 | Lighthouse |
| User Satisfaction | > 4/5 | Survey |
| Error Rate | < 0.1% | Console monitoring |

---

## 🎓 Learning Resources

- [CSS Grid Guide](https://css-tricks.com/snippets/css/complete-guide-grid/)
- [Intersection Observer API](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API)
- [Fetch API Best Practices](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)
- [Responsive Web Design](https://web.dev/responsive-web-design-basics/)

---

## 🚀 Deployment Steps

1. **Staging Environment**
   ```bash
   git checkout -b feature/gmail-style-manager
   # Add files, commit
   git push origin feature/gmail-style-manager
   # Test on staging
   ```

2. **Code Review**
   - Check for conflicts
   - Verify performance
   - Test accessibility

3. **Production Deploy**
   ```bash
   # Backup database
   wp db export backup-$(date +%s).sql
   
   # Deploy files
   git merge feature/gmail-style-manager
   git push production main
   
   # Clear cache
   wp cache flush
   ```

4. **Monitor**
   - Check error logs
   - Monitor user feedback
   - Track performance metrics

---

## 📞 Support & Troubleshooting

### Common Issues

**Issue:** Detail panel không load
```javascript
// Check nonce is passed correctly
console.log('Nonce:', document.getElementById('rb-detail-content').dataset.nonce);
```

**Issue:** CSS không áp dụng
```bash
# Check file path in enqueue
wp_enqueue_style('rb-manager-layout-new', RB_PLUGIN_URL . 'assets/css/manager-layout-new.css');
# Verify file exists: /wp-content/plugins/restaurant-booking/assets/css/manager-layout-new.css
```

**Issue:** AJAX error 400
```php
// Verify nonce name matches
check_ajax_referer('rb_frontend_nonce', 'nonce', false);
// In JS: nonce parameter name must match
```

---

## 📝 Final Notes

✅ **Implementation order:**
1. CSS file (dễ nhất, safe)
2. JS file (test trong console)
3. PHP updates (backup trước)
4. AJAX handler (test với Postman)
5. Full integration test
6. Deploy to production

✅ **Best practices:**
- Commit sau mỗi phase
- Test trên local trước
- Document changes trong git message
- Backup data trước deploy
- Monitor sau deploy

✅ **Timeline estimate:**
- Phase 1-3: 1-2 hours
- Phase 4-6: 2-3 hours  
- Phase 7-9: 1-2 hours
- Phase 10-11: 30 mins
- **Total: 4-7 hours**
