üéØ TASK: Implement Timeline Feature - Phase 1-2 (Database & Backend)
Plugin: Restaurant Booking Manager
Version: 1.0.1

üìã REQUIREMENTS:

=== PHASE 1: DATABASE SCHEMA ENHANCEMENT ===

File: includes/class-database.php

1Ô∏è‚É£ Add new method: migrate_to_timeline_schema()
   - S·∫Ω ƒë∆∞·ª£c g·ªçi t·ª´ ensure_portal_schema()
   
2Ô∏è‚É£ Add columns to wp_rb_bookings table:
   - checkin_time TIME NOT NULL (AFTER booking_time)
   - checkout_time TIME NOT NULL (AFTER checkin_time)
   - actual_checkin DATETIME NULL (AFTER checkout_time)
   - actual_checkout DATETIME NULL (AFTER actual_checkin)
   - cleanup_completed_at DATETIME NULL (AFTER actual_checkout)
   
3Ô∏è‚É£ Add columns to wp_rb_tables table:
   - current_status ENUM('available','occupied','cleaning','reserved') DEFAULT 'available'
   - status_updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
   - last_booking_id INT NULL
   
4Ô∏è‚É£ Add proper indexes:
   - wp_rb_bookings: KEY checkin_checkout_index (location_id, booking_date, checkin_time, checkout_time)
   - wp_rb_tables: KEY current_status_index (location_id, current_status)

5Ô∏è‚É£ Safe migration for existing data:
   - N·∫øu checkin_time/checkout_time NULL ‚Üí set = booking_time
   - checkout_time = booking_time + 2 hours (t√≠nh to√°n t·ª´ booking_time)
   - D√πng $wpdb->get_var() ƒë·ªÉ check column t·ªìn t·∫°i tr∆∞·ªõc khi add

---

=== PHASE 2: BACKEND LOGIC ENHANCEMENT ===

File: includes/class-booking.php

üîß Add new methods:

1Ô∏è‚É£ check_time_overlap($date, $checkin_time, $checkout_time, $location_id, $exclude_booking_id = null)
   Ki·ªÉm tra xem th·ªùi gian check-in/out c√≥ overlap v·ªõi booking kh√°c + cleanup buffer (1 hour)
   Return: boolean (true = c√≥ overlap)
   
   Logic:
   - L·∫•y t·∫•t c·∫£ bookings ·ªü location_id, ng√†y $date, status IN ('pending', 'confirmed')
   - Lo·∫°i tr·ª´ booking $exclude_booking_id n·∫øu c√≥
   - T√≠nh: actual_checkin = checkin_time - 15 ph√∫t (kh√°ch c√≥ th·ªÉ s·ªõm)
           actual_checkout = checkout_time + 15 ph√∫t + 1 hour cleanup
   - So s√°nh overlap v·ªõi existing bookings
   - N·∫øu c√≥ overlap ‚Üí return true

2Ô∏è‚É£ is_time_slot_available($date, $time, $guest_count, $checkin_time, $checkout_time, $exclude_booking_id, $location_id)
   MODIFY existing method ƒë·ªÉ handle timeline
   
   Validation Rules:
   - checkout_time > checkin_time (required)
   - Minimum duration: 1 hour
   - Maximum duration: 6 hours
   - Kh√¥ng overlap v·ªõi bookings kh√°c + 1h cleanup buffer
   - Respect location working hours
   
   Logic:
   - N·∫øu $checkin_time/$checkout_time kh√¥ng truy·ªÅn ‚Üí default = $time v√† $time + 2h
   - Ki·ªÉm tra: check_time_overlap()
   - Ki·ªÉm tra: available tables ƒë·ªß capacity
   - Ki·ªÉm tra: location working hours
   Return: boolean

3Ô∏è‚É£ get_timeline_data($date, $location_id)
   Return structured array cho calendar grid view
   
   Structure:
```php
   return array(
       'date' => '2024-01-15',
       'location_id' => 1,
       'time_slots' => array('09:00', '09:30', '10:00', ... '22:00'),
       'tables' => array(
           'table_1' => array(
               'id' => 1,
               'table_number' => 1,
               'capacity' => 4,
               'current_status' => 'available',
               'bookings' => array(
                   array(
                       'booking_id' => 123,
                       'customer_name' => 'John Doe',
                       'phone' => '0123456789',
                       'checkin_time' => '10:00',
                       'checkout_time' => '12:00',
                       'actual_checkin' => '09:45', // kh√°ch c√≥ th·ªÉ s·ªõm 15'
                       'actual_checkout' => '13:00', // 12:00 + 15' + 1h cleanup
                       'status' => 'confirmed',
                       'guest_count' => 4,
                       'booking_source' => 'website'
                   )
               )
           )
       )
   );
```
   
   Logic:
   - Generate time_slots t·ª´ location opening/closing time (interval 30 ph√∫t)
   - L·∫•y t·∫•t c·∫£ tables ·ªü location
   - L·∫•y t·∫•t c·∫£ bookings ·ªü location, ng√†y $date
   - Map bookings v√†o tables t∆∞∆°ng ·ª©ng
   - T√≠nh actual_checkin = checkin_time - 15'
   - T√≠nh actual_checkout = checkout_time + 15' + 1h cleanup
   - Sort by checkin_time

4Ô∏è‚É£ update_table_status($table_id, $status, $booking_id = null)
   Update wp_rb_tables.current_status
   Parameters:
   - $table_id (int)
   - $status (string): 'available', 'occupied', 'cleaning', 'reserved'
   - $booking_id (int): optional, ƒë·ªÉ track booking n√†o occupation
   
   Update fields:
   - current_status = $status
   - status_updated_at = NOW()
   - last_booking_id = $booking_id (n·∫øu c√≥)
   Return: boolean (success/fail)

5Ô∏è‚É£ MODIFY create_booking() method:
   Add parameters:
   - $checkin_time (string, format: 'HH:MM')
   - $checkout_time (string, format: 'HH:MM')
   
   Validation:
   - Validate checkin < checkout
   - Validate duration 1-6 hours
   - Call is_time_slot_available() v·ªõi checkin/checkout
   
   Store in booking:
   - booking_time = $checkin_time (ho·∫∑c keep as-is, depend on your logic)
   - checkin_time = $checkin_time
   - checkout_time = $checkout_time
   - actual_checkin = $checkin_time - 15 minutes
   - actual_checkout = $checkout_time + 15 minutes + 1 hour cleanup

6Ô∏è‚É£ MODIFY confirm_booking() method:
   When booking confirmed ‚Üí update table status
   Logic:
   - Get table_number t·ª´ booking
   - Call update_table_status($table_id, 'reserved', $booking_id)

7Ô∏è‚É£ Add new method: mark_checkin($booking_id, $actual_time = null)
   Update booking.actual_checkin = $actual_time (or NOW())
   Update table status = 'occupied'

8Ô∏è‚É£ Add new method: mark_checkout($booking_id, $actual_time = null)
   Update booking.actual_checkout = $actual_time (or NOW())
   Update table status = 'cleaning'
   Set cleanup_completed_at = NOW() + 1 hour (t·ª± ƒë·ªông)
   
   Sau 1h ‚Üí auto update status = 'available'

---

üß™ TEST CASES (Phase 1-2):

1. Database migration:
   ‚úÖ Columns ƒë∆∞·ª£c add th√†nh c√¥ng
   ‚úÖ Existing data ƒë∆∞·ª£c migrate (default values)
   ‚úÖ Indexes ƒë∆∞·ª£c t·∫°o
   
2. check_time_overlap():
   ‚úÖ No overlap ‚Üí return false
   ‚úÖ Overlap same slot ‚Üí return true
   ‚úÖ Overlap with cleanup buffer ‚Üí return true
   ‚úÖ Exclude booking_id works
   
3. is_time_slot_available():
   ‚úÖ Valid slot ‚Üí return true
   ‚úÖ Too short duration (<1h) ‚Üí return false
   ‚úÖ Too long duration (>6h) ‚Üí return false
   ‚úÖ Overlap existing booking ‚Üí return false
   ‚úÖ Checkout < checkin ‚Üí return false
   
4. get_timeline_data():
   ‚úÖ Return correct structure
   ‚úÖ Time slots generated correctly
   ‚úÖ All tables included
   ‚úÖ Bookings mapped to correct tables
   ‚úÖ actual_checkin/checkout calculated correctly (¬±15' + 1h cleanup)
   
5. update_table_status():
   ‚úÖ Status updated
   ‚úÖ status_updated_at updated
   ‚úÖ last_booking_id saved
   
6. create_booking() with timeline:
   ‚úÖ Accept checkin/checkout params
   ‚úÖ Store values in DB
   ‚úÖ Validate duration
   
7. confirm_booking():
   ‚úÖ Table status changed to 'reserved'
   ‚úÖ last_booking_id set

---

‚ö†Ô∏è CRITICAL POINTS:

‚úÖ Backward compatibility:
   - Existing bookings with NULL checkin/checkout ‚Üí auto-populate with defaults
   - Existing create_booking() calls ‚Üí still work (optional checkin/checkout)
   
‚úÖ Code standards:
   - Follow existing class structure
   - Use $wpdb->prepare() for security
   - Add inline comments (ti·∫øng Vi·ªát)
   - Follow naming convention t·ª´ codebase
   
‚úÖ No breaking changes:
   - existing methods signature ‚Üí optional params only
   - existing data ‚Üí safe migration
   
‚úÖ Performance:
   - Indexes on frequently queried columns
   - Efficient queries (avoid N+1)
   - Use proper WHERE clauses

---

üì¶ DELIVERABLES (Phase 1-2):

1. Database schema updated v·ªõi migration function
2. RB_Booking class with 8 new methods
3. All methods fully functional & tested
4. No breaking changes
5. Code matches existing style & standards
6. Ready for Phase 3-4 (AJAX integration)

---

üöÄ PRIORITY:

1. Database migration (must work)
2. check_time_overlap() (core logic)
3. is_time_slot_available() (core logic)
4. get_timeline_data() (data structure)
5. update_table_status() (status management)
6. Modify create_booking() + confirm_booking()
7. Mark checkin/checkout methods
8. Test all methods

---

üí° IMPLEMENTATION NOTES:

- T·∫•t c·∫£ time calculations ph·∫£i x·ª≠ l√Ω timezone ƒë√∫ng
- D√πng 24-hour format (HH:MM)
- Cleanup time lu√¥n = 1 hour (fixed)
- actual_checkin = checkin_time - 15 minutes
- actual_checkout = checkout_time + 15 minutes + 1 hour cleanup
- T·∫•t c·∫£ queries d√πng $wpdb->prepare()
```

---

